#ifndef IconsH
#define IconsH

#include <string>

namespace Icons
{
  static const std::string EMPTY_16X16 = "empty_16x16";

  static const std::string CM_HELP = "cm_help";
  static const std::string CM_COPY = "cm_copy";
  static const std::string CM_PASTE = "cm_paste";
  static const std::string CM_COLLAPSE = "cm_collapse";
  static const std::string CM_EXPAND = "cm_expand";
  static const std::string CM_REFRESH = "cm_refresh";
  static const std::string CM_DELETE = "cm_delete";
  static const std::string CM_PROPERTIES = "cm_properties";
  static const std::string CM_CREATE = "cm_create";
  static const std::string CM_REMOTE = "cm_remote";
  static const std::string CM_DISCOVER = "cm_discover";
  static const std::string CM_CUSTOM_PROPERTIES = "cm_custom_properties";
  static const std::string CM_CHART = "cm_chart";
  static const std::string CM_MONITOR = "cm_monitor";
  static const std::string CM_REPLICATE = "cm_replicate";
  static const std::string CM_REPLICATE_TO_CHILDREN = "cm_replicate_to_children";
  static const std::string CM_SYSTEM_TREE = "cm_system_tree";
  static const std::string CM_MAKE_COPY = "cm_make_copy";
  static const std::string CM_EXPORT = "cm_export";
  static const std::string CM_IMPORT = "cm_import";
  static const std::string CM_PERMISSIONS = "cm_permissions";
  static const std::string CM_STATUS = "cm_status";
  static const std::string CM_HISTORY = "cm_history";
  static const std::string CM_RESTART = "cm_restart";
  static const std::string CM_STOP = "cm_stop";
  static const std::string CM_VARIABLE = "cm_variable";
  static const std::string CM_EVENT = "cm_event";
  static const std::string CM_DEVICE_PROPERTIES = "cm_device_properties";
  static const std::string CM_SYNC = "cm_sync";
  static const std::string CM_REMOVE_FROM_GROUP = "cm_remove_from_group";
  static const std::string CM_PLUGIN = "cm_plugin";
  static const std::string CM_GUIDE = "cm_guide";
  static const std::string CM_INVALID = "cm_invalid";
  static const std::string CM_VALID = "cm_valid";

  static const std::string FR_DASHBOARD = "fr_dashboard";
  static const std::string FR_WIDGET = "fr_widget";
  static const std::string FR_EDIT = "fr_edit";
  static const std::string FR_SYSTEM_TREE = "fr_system_tree";
  static const std::string FR_EXPRESSION_BUILDER = "fr_expression_builder";
  static const std::string FR_EVENT_LOG = "fr_event_log";
  static const std::string FR_HELP = "fr_help";
  static const std::string FR_GUI_BUILDER = "fr_gui_builder";
  static const std::string FR_REPORT_VIEWER = "fr_report_viewer";
  static const std::string FR_WIDGET_EVENT_LOG = "fr_widget_event_log";

  static const std::string ES_EVENT = "es_event";
  static const std::string ES_FUNCTION = "es_function";
  static const std::string ES_CONTEXT_COLLAPSED = "es_context_collapsed";
  static const std::string ES_CONTEXT_EXPANDED = "es_context_expanded";
  static const std::string ES_INPUT_FIELD = "es_input_field";
  static const std::string ES_OUTPUT_FIELD = "es_output_field";
  static const std::string ES_VARIABLE = "es_variable";
  static const std::string ES_ACTION = "es_action";

  static const std::string ALERT_LOGO = "alert_logo";
  static const std::string ALERT_OPTIONS = "alert_options";
  static const std::string ALERT_CLOSE = "alert_close";

  static const std::string ST_CONFIG = "st_config";
  static const std::string ST_SERVERS = "st_servers";
  static const std::string ST_SCROLL_UP = "st_scroll_up";
  static const std::string ST_SCROLL_DOWN = "st_scroll_down";
  static const std::string ST_MENU_COLLAPSE = "st_menu_collapse";
  static const std::string ST_MENU_EXPAND = "st_menu_expand";
  static const std::string ST_MENU_REFRESH = "st_menu_refresh";
  static const std::string ST_REPORT = "st_report";
  static const std::string ST_TRACKERS = "st_trackers";
  static const std::string ST_FAVOURITES = "st_favourites";
  static const std::string ST_ALERT = "st_alert";
  static const std::string ST_EVENTFILTER = "st_eventfilter";
  static const std::string ST_TRACKER = "st_tracker";
  static const std::string ST_JOB = "st_job";
  static const std::string ST_WIDGET = "st_widget";
  static const std::string ST_ALERTS = "st_alerts";
  static const std::string ST_AUTORUN = "st_autorun";
  static const std::string ST_AUTORUNS = "st_autoruns";
  static const std::string ST_COMMONDATA = "st_commondata";
  static const std::string ST_COMMONDATATABLE = "st_commondatatable";
  static const std::string ST_COMPLAINCE_POLICIES = "st_compliance_policies";
  static const std::string ST_COMPLAINCE_POLICY = "st_compliance_policy";
  static const std::string ST_ADMINISTRATION = "st_administration";
  static const std::string ST_SERVER = "st_server";
  static const std::string ST_DASHBOARD = "st_dashboard";
  static const std::string ST_DASHBOARDS = "st_dashboards";
  static const std::string ST_DEVICE = "st_device";
  static const std::string ST_DEVICES = "st_devices";
  static const std::string ST_FAVOURITE = "st_favourite";
  static const std::string ST_EVENTFILTERS = "st_eventfilters";
  static const std::string ST_GROUP = "st_group";
  static const std::string ST_GROUPS = "st_groups";
  static const std::string ST_ACCESS_POLICIES = "st_access_policies";
  static const std::string ST_ACCESS_POLICY = "st_access_policy";
  static const std::string ST_TIMEZONE = "st_timezone";
  static const std::string ST_TIMEZONES = "st_timezones";
  static const std::string ST_SHIFT = "st_shift";
  static const std::string ST_SHIFTS = "st_shifts";
  static const std::string ST_EMPLOYEE = "st_employee";
  static const std::string ST_EMPLOYEES = "st_employees";
  static const std::string ST_DEPARTMENT = "st_department";
  static const std::string ST_DEPARTMENTS = "st_departments";
  static const std::string ST_SUBDIVISION = "st_subdivision";
  static const std::string ST_SUBDIVISIONS = "st_subdivisions";
  static const std::string ST_ORGANIZATION = "st_organization";
  static const std::string ST_ORGANIZATIONS = "st_organizations";
  static const std::string ST_DS = "st_ds";
  static const std::string ST_DEVICESERVERS = "st_deviceservers";
  static const std::string ST_EXTDEVICESERVER_PROGRAMMABLE = "st_extdeviceserver_programmable";
  static const std::string ST_EXTDEVICESERVER = "st_extdeviceserver";
  static const std::string ST_EXTDEVICESERVERS = "st_extdeviceservers";
  static const std::string ST_DISCOVERED = "st_discovered";
  static const std::string ST_DISCOVERY = "st_discovery";
  static const std::string ST_PLUGIN = "st_plugin";
  static const std::string ST_PLUGINS = "st_plugins";
  static const std::string ST_QUERIES = "st_queries";
  static const std::string ST_QUERY = "st_query";
  static const std::string ST_REPORTS = "st_reports";
  static const std::string ST_JOBS = "st_jobs";
  static const std::string ST_SCRIPT = "st_script";
  static const std::string ST_SCRIPTS = "st_scripts";
  static const std::string ST_MODEL = "st_model";
  static const std::string ST_MODELS = "st_models";
  static const std::string ST_MODEL_INSTANCE = "st_model_instance";
  static const std::string ST_MODEL_INSTANCES = "st_model_instances";
  static const std::string ST_USER = "st_user";
  static const std::string ST_USERS = "st_users";
  static const std::string ST_WIDGETS = "st_widgets";
  static const std::string ST_IPSLA = "st_ipsla";
  static const std::string ST_IPSLAS = "st_ipslas";

  static const std::string DTE_ADD_ROW = "dte_add_row";
  static const std::string DTE_ENABLE_ADVANCED = "dte_enable_advanced";
  static const std::string DTE_DISABLE_ADVANCED = "dte_disable_advanced";
  static const std::string DTE_REPORT = "dte_report";
  static const std::string DTE_HELP = "dte_help";
  static const std::string DTE_IMPORT = "dte_import";
  static const std::string DTE_EXPORT = "dte_export";
  static const std::string DTE_EXPAND = "dte_expand";
  static const std::string DTE_COLLAPSE = "dte_collapse";
  static const std::string DTE_ENABLE_HSCROLL = "dte_enable_hscroll";
  static const std::string DTE_DISABLE_HSCROLL = "dte_disable_hscroll";
  static const std::string DTE_RESET = "dte_reset";
  static const std::string DTE_ROW_DOWN = "dte_row_down";
  static const std::string DTE_ROW_UP = "dte_row_up";
  static const std::string DTE_REMOVE_ROW = "dte_remove_row";
  static const std::string DTE_FILTER_EXPRESSION = "dte_filter_expression";
  static const std::string DTE_FILTER_REGEXP = "dte_filter_regexp";
  static const std::string DTE_FILTER_TEXT = "dte_filter_text";
  static const std::string DTE_BINDINGS = "dte_bindings";

  static const std::string PE_SAVE = "pe_save";
  static const std::string PE_RELOAD = "pe_reload";
  static const std::string PE_EXPORT = "pe_export";
  static const std::string PE_IMPORT = "pe_import";
  static const std::string PE_SHOW_PANEL = "pe_show_panel";
  static const std::string PE_HIDE_PANEL = "pe_hide_panel";
  static const std::string PE_LOCK_OFF = "pe_lock_off";
  static const std::string PE_TABS_ON = "pe_tabs_on";
  static const std::string PE_TABS_OFF = "pe_tabs_off";
  static const std::string PE_LOCK_ON = "pe_lock_on";

  static const std::string EL_ENABLE_HSCROLL = "el_enable_hscroll";
  static const std::string EL_DISABLE_HSCROLL = "el_disable_hscroll";
  static const std::string EL_EXPORT = "el_export";
  static const std::string EL_SEVERITY_STATS = "el_severity_stats";
  static const std::string EL_CONFIGURE = "el_configure";
  static const std::string EL_REACTIVATE = "el_reactivate";
  static const std::string EL_NEXT = "el_next";
  static const std::string EL_PREVIOUS = "el_previous";
  static const std::string EL_LAST = "el_last";
  static const std::string EL_FIRST = "el_first";
  static const std::string EL_REFRESH = "el_refresh";
  static const std::string EL_CLEAR = "el_clear";

  static const std::string VAR_PROPERTIES = "var_properties";
  static const std::string VAR_CONNECTION = "var_connection";
  static const std::string VAR_SYNC = "var_sync";
  static const std::string VAR_STATISTICS = "var_statistics";
  static const std::string VAR_FILTER_HISTORY = "var_filter_history";
  static const std::string VAR_FILTER_HIGHLIGHTING = "var_filter_highlighting";
  static const std::string VAR_FILTER_ADDITIONAL_FIELDS = "var_filter_additional_fields";
  static const std::string VAR_FILTER_FIELDS = "var_filter_fields";
  static const std::string VAR_FILTER_RULES = "var_filter_rules";
  static const std::string VAR_FILTER_INFO = "var_filter_info";
  static const std::string VAR_ADVANCED_SCHEDULE = "var_advanced_schedule";
  static const std::string VAR_SIMPLE_SCHEDULE = "var_simple_schedule";
  static const std::string VAR_LOCATION = "var_location";
  static const std::string VAR_TOPOLOGY = "var_topology";

  static const std::string VS_SYNC_SERVER_TO_DEVICE = "vs_sync_server_to_device";
  static const std::string VS_SYNC_DEVICE_TO_SERVER = "vs_sync_device_to_server";
  static const std::string VS_SYNC_WAITING = "vs_sync_waiting";
  static const std::string VS_SYNC_ERROR = "vs_sync_error";
  static const std::string VS_SYNC_DISABLED = "vs_sync_disabled";
  static const std::string VS_SYNC_READ_ONLY = "vs_sync_read_only";
  static const std::string VS_SYNC_DIRECT_ACCESS = "vs_sync_direct";
  static const std::string VS_SYNC_DIRECT_WRITE = "vs_sync_direct_write";
  static const std::string VS_SYNC_MASTER_VALUE = "vs_sync_master";
  static const std::string VS_SYNC_UNCERTAIN = "vs_sync_uncertain";
  static const std::string VS_SERVICE_OFFLINE = "vs_service_offline";
  static const std::string VS_SERVICE_ONLINE = "vs_service_online";
  static const std::string VS_SERVICE_UNKNOWN = "vs_service_unknown";
  static const std::string VS_BOUND = "vs_bound";

  static const std::string EVT_INFO = "evt_info";
  static const std::string EVT_ALERT = "evt_alert";
  static const std::string EVT_EMAIL = "evt_email";
  static const std::string EVT_LOGOUT = "evt_logout";
  static const std::string EVT_LOGIN = "evt_login";

  static const std::string FI_EXPRESSION = "fi_expression";
  static const std::string FI_CONTEXT = "fi_context";
  static const std::string FI_VARIABLE = "fi_variable";
  static const std::string FI_EVENT = "fi_event";

  static const std::string GB_RT_ROOT = "gb_rt_root";
  static const std::string GB_FILL_VERTICAL = "gb_fill_vertical";
  static const std::string GB_FILL_HORIZONTAL = "gb_fill_horizontal";
  static const std::string GB_TOGGLE_BORDERS = "gb_toggle_borders";
  static const std::string GB_RT_COMPONENT = "gb_rt_component";
  static const std::string GB_RT_CONTAINER = "gb_rt_container";
  static const std::string GB_SAME_HEIGHT_MAX = "gb_same_height_max";
  static const std::string GB_SAME_HEIGHT_MIN = "gb_same_height_min";
  static const std::string GB_SAME_WIDTH_MAX = "gb_same_width_max";
  static const std::string GB_SAME_WIDTH_MIN = "gb_same_width_min";
  static const std::string GB_ALIGN_VERTICAL_AXIS = "gb_align_vertical_axis";
  static const std::string GB_ALIGN_HORIZONTAL_AXIS = "gb_align_horizontal_axis";
  static const std::string GB_ALIGN_RIGHT = "gb_align_right";
  static const std::string GB_ALIGN_LEFT = "gb_align_left";
  static const std::string GB_ALIGN_BOTTOM = "gb_align_bottom";
  static const std::string GB_ALIGN_TOP = "gb_align_top";
  static const std::string GB_ANCHOR_SW = "gb_anchor_sw";
  static const std::string GB_ANCHOR_SE = "gb_anchor_se";
  static const std::string GB_ANCHOR_NE = "gb_anchor_ne";
  static const std::string GB_ANCHOR_NW = "gb_anchor_nw";
  static const std::string GB_ANCHOR_W = "gb_anchor_w";
  static const std::string GB_ANCHOR_S = "gb_anchor_s";
  static const std::string GB_ANCHOR_E = "gb_anchor_e";
  static const std::string GB_ANCHOR_N = "gb_anchor_n";
  static const std::string GB_ANCHOR_CENTER = "gb_anchor_center";
  static const std::string GB_RUN = "gb_run";
  static const std::string GB_STOP = "gb_stop";
  static const std::string GB_REDO = "gb_redo";
  static const std::string GB_UNDO = "gb_undo";
  static const std::string GB_SAVE_TEMPLATE = "gb_save_template";
  static const std::string GB_OPEN_TEMPLATE = "gb_open_template";
  static const std::string GB_NEW_TEMPLATE = "gb_new_template";
  static const std::string GB_CANCEL = "gb_cancel";
  static const std::string GB_DONE = "gb_done";
  static const std::string GB_HORIZONTAL_SPACING_EQUALS_BETWEEN_CENTERS = "gb_h_spacing_equal_between_centers";
  static const std::string GB_VERTICAL_SPACING_EQUALS_BETWEEN_CENTERS = "gb_v_spacing_equal_between_centers";
  static const std::string GB_HORIZONTAL_SPACING_EQUALS_BETWEEN_BOUNDS = "gb_h_spacing_equal_between_bounds";
  static const std::string GB_VERTICAL_SPACING_EQUALS_BETWEEN_BOUNDS = "gb_v_spacing_equal_between_bounds";

  static const std::string GB_COMPONENT_CHART_PIE = "gb_component_chart_pie";
  static const std::string GB_COMPONENT_CHART_RING = "gb_component_chart_ring";
  static const std::string GB_COMPONENT_CHART_MIXED_CATEGORY = "gb_component_chart_mixed_category";
  static const std::string GB_COMPONENT_CHART_BAR = "gb_component_chart_bar";
  static const std::string GB_COMPONENT_CHART_GANTT = "gb_component_chart_gantt";
  static const std::string GB_COMPONENT_CHART_BAR_INTERVAL = "gb_component_chart_bar_interval";
  static const std::string GB_COMPONENT_CHART_STATISTICAL = "gb_component_chart_statistical";
  static const std::string GB_COMPONENT_CHART_AREA = "gb_component_chart_area";
  static const std::string GB_COMPONENT_CHART_COMBINED_RANGE_CATEGORY = "gb_component_chart_combined_range_category";
  static const std::string GB_COMPONENT_CHART_LINE = "gb_component_chart_line";
  static const std::string GB_COMPONENT_CHART_COMBINED_DOMAIN_CATEGORY = "gb_component_chart_combined_domain_category";
  static const std::string GB_COMPONENT_CHART_POLAR = "gb_component_chart_polar";
  static const std::string GB_COMPONENT_CHART_BLOCK = "gb_component_chart_block";
  static const std::string GB_COMPONENT_CHART_BUBBLE = "gb_component_chart_bubble";
  static const std::string GB_COMPONENT_CHART_COMBINED_DOMAIN_XY = "gb_component_chart_combined_domain_xy";
  static const std::string GB_COMPONENT_CHART_COMBINED_RANGE_XY = "gb_component_chart_combined_range_xy";
  static const std::string GB_COMPONENT_CHART_FINANCIAL = "gb_component_chart_financial";
  static const std::string GB_COMPONENT_CHART_INTERVAL = "gb_component_chart_interval";
  static const std::string GB_COMPONENT_CHART_VECTOR = "gb_component_chart_vector";
  static const std::string GB_COMPONENT_CHART_AREA_XY = "gb_component_chart_area_xy";
  static const std::string GB_COMPONENT_CHART_BAR_XY = "gb_component_chart_bar_xy";
  static const std::string GB_COMPONENT_CHART_DEVIATION = "gb_component_chart_deviation";
  static const std::string GB_COMPONENT_CHART_CROSS = "gb_component_chart_cross";
  static const std::string GB_COMPONENT_CHART_LINE_XY = "gb_component_chart_line_xy";
  static const std::string GB_COMPONENT_CHART_MIXED_XY = "gb_component_chart_mixed_xy";
  static const std::string GB_COMPONENT_CHART_SPIDER = "gb_component_chart_spider";
  static const std::string GB_COMPONENT_COMBOBOX = "gb_component_combobox";
  static const std::string GB_COMPONENT_DATE_TIME_PICKER = "gb_component_datetimepicker";
  static const std::string GB_COMPONENT_COMPASS = "gb_component_compass";
  static const std::string GB_COMPONENT_LAYEREDPANE = "gb_component_layeredpane";
  static const std::string GB_COMPONENT_SPLITPANE = "gb_component_splitpane";
  static const std::string GB_COMPONENT_TABBEDPANE = "gb_component_tabbedpane";
  static const std::string GB_COMPONENT_PANEL = "gb_component_panel";
  static const std::string GB_COMPONENT_DTE = "gb_component_dte";
  static const std::string GB_COMPONENT_DEVICE = "gb_component_device";
  static const std::string GB_COMPONENT_EVENTLOG = "gb_component_eventlog";
  static const std::string GB_COMPONENT_SYSTEMTREE = "gb_component_systemtree";
  static const std::string GB_COMPONENT_SIMPLE_GAUGE = "gb_component_gauge";
  static const std::string GB_COMPONENT_SIMPLE_ARC_GAUGE = "gb_component_arcgauge";
  static const std::string GB_COMPONENT_RADIAL_GAUGE = "gb_component_radial_gauge";
  static const std::string GB_COMPONENT_RADIAL_BARGRAPH_GAUGE = "gb_component_radial_bargraph_gauge";
  static const std::string GB_COMPONENT_ARC_GAUGE = "gb_component_arc_gauge";
  static const std::string GB_COMPONENT_HALF_ROUND_GAUGE = "gb_component_half_round_gauge";
  static const std::string GB_COMPONENT_QUARTER_ROUND_GAUGE = "gb_component_quarter_round_gauge";
  static const std::string GB_COMPONENT_LINEAR_GAUGE = "gb_component_linear_gauge";
  static const std::string GB_COMPONENT_LINEAR_BARGRAPH_GAUGE = "gb_component_linear_bargraph_gauge";
  static const std::string GB_COMPONENT_COUNTER_GAUGE = "gb_component_counter_gauge";
  static const std::string GB_COMPONENT_IMAGE = "gb_component_image";
  static const std::string GB_COMPONENT_LIST = "gb_component_list";
  static const std::string GB_COMPONENT_MAP = "gb_component_map";
  static const std::string GB_COMPONENT_METER = "gb_component_meter";
  static const std::string GB_COMPONENT_PROGRESSBAR = "gb_component_progressbar";
  static const std::string GB_COMPONENT_SLIDER = "gb_component_slider";
  static const std::string GB_COMPONENT_SPINNER = "gb_component_spinner";
  static const std::string GB_COMPONENT_BUTTON = "gb_component_button";
  static const std::string GB_COMPONENT_CHECKBOX = "gb_component_checkbox";
  static const std::string GB_COMPONENT_HTMLAREA = "gb_component_htmlarea";
  static const std::string GB_COMPONENT_LABEL = "gb_component_label";
  static const std::string GB_COMPONENT_TEXTAREA = "gb_component_textarea";
  static const std::string GB_COMPONENT_TEXTFIELD = "gb_component_textfield";
  static const std::string GB_COMPONENT_FORMATTEDFIELD = "gb_component_formattedfield";
  static const std::string GB_COMPONENT_PASSWORDFIELD = "gb_component_passwordfield";
  static const std::string GB_COMPONENT_TOGGLEBUTTON = "gb_component_togglebutton";
  static const std::string GB_COMPONENT_RADIOBUTTON = "gb_component_radiobutton";
  static const std::string GB_COMPONENT_VECTORDRAWING = "gb_component_vectordrawing";
  static const std::string GB_COMPONENT_SUBWIDGET = "gb_component_subwidget";
  static const std::string GB_COMPONENT_GRAPH = "gb_component_graph";
  static const std::string GB_COMPONENT_VIDEO_PLAYER = "gb_component_video_player";
  static const std::string GB_COMPONENT_LED_DISPLAY = "gb_component_led_display";

  static const std::string GB_TOOL_ELLIPSE = "gb_tool_ellipse";
  static const std::string GB_TOOL_LINE = "gb_tool_line";
  static const std::string GB_TOOL_POLYGON = "gb_tool_polygon";
  static const std::string GB_TOOL_RECTANGLE = "gb_tool_rectangle";
  static const std::string GB_TOOL_SELECT = "gb_tool_select";
  static const std::string GB_TOOL_ARROW = "gb_tool_arrow";

  static const std::string MACRO_GUIDE = "macro_guide";
  static const std::string MACRO_FILES = "macro_files";
  static const std::string MACRO_REC = "macro_rec";
  static const std::string MACRO_STOP = "macro_stop";
  static const std::string MACRO_NEXT = "macro_next";
  static const std::string MACRO_PREV = "macro_prev";
  static const std::string MACRO_COMPASS = "macro_compass";

  // Vertical Market Solutions

  static const std::string NM_MONITORING_PROFILE = "nm_monitoring_profile";
  static const std::string NM_AVAILABILITY = "nm_availability";
  static const std::string NM_MEMORY = "nm_memory";
  static const std::string NM_DISK = "nm_disk";
  static const std::string NM_NETWORK_INTERFACE = "nm_network_interface";
  static const std::string NM_CPU = "nm_cpu";
  static const std::string NM_APACHE = "nm_apache";
  static const std::string NM_PROCESSES = "nm_processes";
  static const std::string NM_VMWARE = "nm_vmware";
};
#endif
